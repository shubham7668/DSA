class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        
        //for(int i=0;i<matrix.size();i++){//BRUTE FORCE--> O(n*m)
        //    for(int j=0;j<matrix[0].size();j++){
        //        if(matrix[i][j]==target) return true ;
        //    }
        //}
        //return false;                   
        
        
        
        int m=matrix.size(), n=matrix[0].size();     //Using Binary search on indices--> O(log(n*m))
        int start=0, end=m*n-1;                      //Element--> row=mid/col; col=mid%col;
        
        if(matrix.size()==0) return false;
        
        while(start<=end){
            int mid= start + (end-start)/2 ;
            
            if(matrix[mid/n][mid%n]==target) return true;
            
            else if(matrix[mid/n][mid%n]>target){
                end=mid-1;
            }
            else{
                start=mid+1;
            }
        }
        return false;
    }
};
